{"version":3,"sources":["/Users/ronrennick/Sites/solaris/woocommerce/packages/js/e2e-environment/src/slack/reporter.js"],"names":["createReadStream","require","WebClient","ErrorCode","getTestConfig","GITHUB_ACTIONS","GITHUB_REF","GITHUB_SHA","GITHUB_REPOSITORY","GITHUB_RUN_ID","TRAVIS_PULL_REQUEST_BRANCH","TRAVIS_COMMIT","TRAVIS_BUILD_WEB_URL","E2E_SLACK_TOKEN","E2E_SLACK_CHANNEL","WC_E2E_SCREENSHOTS","process","env","web","initializeWeb","initializeSlack","testConfig","branch","commit","webUrl","url","refArray","split","pop","sendFailedTestMessageToSlack","testName","conversations","join","channel","token","error","code","PlatformError","RequestError","RateLimitedError","HTTPError","data","console","log","chat","postMessage","text","sendFailedTestScreenshotToSlack","screenshotOfFailedTest","pr","filename","files","upload","channels","file","module","exports"],"mappings":"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","sourcesContent":["const { createReadStream } = require( 'fs' );\nconst { WebClient, ErrorCode } = require( '@slack/web-api' );\nconst { getTestConfig } = require( '../../utils' );\nconst {\n\tGITHUB_ACTIONS,\n\tGITHUB_REF,\n\tGITHUB_SHA,\n\tGITHUB_REPOSITORY,\n\tGITHUB_RUN_ID,\n\tTRAVIS_PULL_REQUEST_BRANCH,\n\tTRAVIS_COMMIT,\n\tTRAVIS_BUILD_WEB_URL,\n\tE2E_SLACK_TOKEN,\n\tE2E_SLACK_CHANNEL,\n\tWC_E2E_SCREENSHOTS,\n} = process.env;\n\nlet web;\n\n/**\n * Initialize the Slack web client.\n *\n * @returns {WebClient}\n */\nconst initializeWeb = () => {\n\tif ( ! web ) {\n\t\tweb = new WebClient( E2E_SLACK_TOKEN );\n\t}\n\treturn web;\n};\n\n/**\n * Initialize Slack parameters if tests are running in CI.\n * @returns {Object|boolean}\n */\nconst initializeSlack = () => {\n\tif ( ! WC_E2E_SCREENSHOTS || ! E2E_SLACK_TOKEN ) {\n\t\treturn false;\n\t}\n\tif ( ! GITHUB_ACTIONS && ! TRAVIS_PULL_REQUEST_BRANCH ) {\n\t\tconst testConfig = getTestConfig();\n\t\treturn {\n\t\t\tbranch: 'local environment',\n\t\t\tcommit: 'latest',\n\t\t\twebUrl: testConfig.url,\n\t\t};\n\t}\n\t// Build PR info\n\tif ( GITHUB_ACTIONS ) {\n\t\tconst refArray = GITHUB_REF.split( '/' );\n\t\tconst branch = refArray.pop();\n\t\treturn {\n\t\t\tbranch,\n\t\t\tcommit: GITHUB_SHA,\n\t\t\twebUrl: `https://github.com/${ GITHUB_REPOSITORY }/actions/runs/${ GITHUB_RUN_ID }`,\n\t\t};\n\t}\n\n\treturn {\n\t\tbranch: TRAVIS_PULL_REQUEST_BRANCH,\n\t\tcommit: TRAVIS_COMMIT,\n\t\twebUrl: TRAVIS_BUILD_WEB_URL,\n\t};\n};\n\n/**\n * Post a message to a Slack channel for a failed test.\n *\n * @param testName\n * @returns {Promise<void>}\n */\nasync function sendFailedTestMessageToSlack( testName ) {\n\tconst { branch, commit, webUrl } = initializeSlack();\n\tif ( ! branch ) {\n\t\treturn;\n\t}\n\tconst web = initializeWeb();\n\n\ttry {\n\t\t// Adding the app does not add the app user to the channel\n\t\tawait web.conversations.join({\n\t\t\tchannel: E2E_SLACK_CHANNEL,\n\t\t\ttoken: E2E_SLACK_TOKEN,\n\t\t});\n\t} catch ( error ) {\n\t\t// Check the code property and log the response\n\t\tif ( error.code === ErrorCode.PlatformError || error.code === ErrorCode.RequestError ||\n\t\t\terror.code === ErrorCode.RateLimitedError || error.code === ErrorCode.HTTPError ) {\n\t\t\tif ( error.data.error != 'channel_not_found' ) {\n\t\t\t\tconsole.log(error.data);\n\t\t\t}\n\t\t} else {\n\t\t\t// Some other error, oh no!\n\t\t\tconsole.log(\n\t\t\t\t'Error joining channel',\n\t\t\t\terror\n\t\t\t);\n\t\t}\n\t}\n\ttry {\n\t\t// For details, see: https://api.slack.com/methods/chat.postMessage\n\t\tawait web.chat.postMessage({\n\t\t\tchannel: E2E_SLACK_CHANNEL,\n\t\t\ttoken: E2E_SLACK_TOKEN,\n\t\t\ttext: `Test failed on *${ branch }* branch. \\n\n            The commit this build is testing is *${ commit }*. \\n\n            The name of the test that failed: *${ testName }*. \\n\n            See screenshot of the failed test below. *Build log* could be found here: ${ webUrl }`,\n\t\t});\n\t} catch ( error ) {\n\t\t// Check the code property and log the response\n\t\tif ( error.code === ErrorCode.PlatformError || error.code === ErrorCode.RequestError ||\n\t\t\terror.code === ErrorCode.RateLimitedError || error.code === ErrorCode.HTTPError ) {\n\t\t\tconsole.log( error.data );\n\t\t} else {\n\t\t\t// Some other error, oh no!\n\t\t\tconsole.log(\n\t\t\t\t'The error occurred does not match an error we are checking for in this block.',\n\t\t\t\terror\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * Post a screenshot to a Slack channel for a failed test.\n * @param screenshotOfFailedTest\n * @returns {Promise<void>}\n */\nasync function sendFailedTestScreenshotToSlack( screenshotOfFailedTest ) {\n\tconst pr = initializeSlack();\n\tif ( ! pr ) {\n\t\treturn;\n\t}\n\tconst web = initializeWeb();\n\tconst filename = 'screenshot_of_failed_test.png';\n\n\ttry {\n\t\t// For details, see: https://api.slack.com/methods/files.upload\n\t\tawait web.files.upload({\n\t\t\tchannels: E2E_SLACK_CHANNEL,\n\t\t\ttoken: E2E_SLACK_TOKEN,\n\t\t\tfilename,\n\t\t\tfile: createReadStream( screenshotOfFailedTest ),\n\t\t});\n\t} catch ( error ) {\n\t\t// Check the code property and log the response\n\t\tif ( error.code === ErrorCode.PlatformError || error.code === ErrorCode.RequestError ||\n\t\t\terror.code === ErrorCode.RateLimitedError || error.code === ErrorCode.HTTPError ) {\n\t\t\tconsole.log( error.data );\n\t\t} else {\n\t\t\t// Some other error, oh no!\n\t\t\tconsole.log( 'The error occurred does not match an error we are checking for in this block.' );\n\t\t}\n\t}\n}\n\nmodule.exports = {\n\tsendFailedTestMessageToSlack,\n\tsendFailedTestScreenshotToSlack,\n};\n"]}