import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";

/**
 * External dependencies
 */
import { first } from 'lodash';
/**
 * Searches for an item in the menu with the text provided and clicks it.
 *
 * @param {string} label The label to search the menu item for.
 */

export function clickMenuItem(_x) {
  return _clickMenuItem.apply(this, arguments);
}

function _clickMenuItem() {
  _clickMenuItem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(label) {
    var elementToClick;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = first;
            _context.next = 3;
            return page.$x("//div[@role=\"menu\"]//span[contains(concat(\" \", @class, \" \"), \" components-menu-item__item \")][contains(text(), \"".concat(label, "\")]"));

          case 3:
            _context.t1 = _context.sent;
            elementToClick = (0, _context.t0)(_context.t1);
            _context.next = 7;
            return elementToClick.click();

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _clickMenuItem.apply(this, arguments);
}
//# sourceMappingURL=click-menu-item.js.map