{"version":3,"sources":["@wordpress/e2e-test-utils/src/press-key-with-modifier.js"],"names":["capitalize","modifiers","SHIFT","ALT","CTRL","emulateSelectAll","page","evaluate","isMac","test","window","navigator","platform","document","activeElement","dispatchEvent","KeyboardEvent","bubbles","cancelable","key","code","location","DOM_KEY_LOCATION_LEFT","getModifierState","keyArg","ctrlKey","metaKey","charCode","keyCode","which","preventableEvent","DOM_KEY_LOCATION_STANDARD","wasPrevented","defaultPrevented","execCommand","setClipboardData","plainText","html","_plainText","_html","_clipboardData","DataTransfer","setData","emulateClipboard","type","_type","selection","getSelection","toString","rangeCount","range","getRangeAt","fragment","cloneContents","Array","from","childNodes","map","node","outerHTML","nodeValue","join","ClipboardEvent","clipboardData","pressKeyWithModifier","modifier","toLowerCase","isAppleOS","process","overWrittenModifiers","shiftAlt","_isApple","mappedModifiers","ctrlSwap","mod","Promise","all","capitalizedMod","keyboard","down","press","up"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { capitalize } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { modifiers, SHIFT, ALT, CTRL } from '@wordpress/keycodes';\n\n/**\n * Emulates a Ctrl+A SelectAll key combination by dispatching custom keyboard\n * events and using the results of those events to determine whether to call\n * `document.execCommand( 'selectall' );`. This is necessary because Puppeteer\n * does not emulate Ctrl+A SelectAll in macOS. Events are dispatched to ensure\n * that any `Event#preventDefault` which would have normally occurred in the\n * application as a result of Ctrl+A is respected.\n *\n * @see https://github.com/GoogleChrome/puppeteer/issues/1313\n * @see https://w3c.github.io/uievents/tools/key-event-viewer.html\n *\n * @return {Promise} Promise resolving once the SelectAll emulation completes.\n */\nasync function emulateSelectAll() {\n\tawait page.evaluate( () => {\n\t\tconst isMac = /Mac|iPod|iPhone|iPad/.test( window.navigator.platform );\n\n\t\tdocument.activeElement.dispatchEvent(\n\t\t\tnew KeyboardEvent( 'keydown', {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true,\n\t\t\t\tkey: isMac ? 'Meta' : 'Control',\n\t\t\t\tcode: isMac ? 'MetaLeft' : 'ControlLeft',\n\t\t\t\tlocation: window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,\n\t\t\t\tgetModifierState: ( keyArg ) =>\n\t\t\t\t\tkeyArg === ( isMac ? 'Meta' : 'Control' ),\n\t\t\t\tctrlKey: ! isMac,\n\t\t\t\tmetaKey: isMac,\n\t\t\t\tcharCode: 0,\n\t\t\t\tkeyCode: isMac ? 93 : 17,\n\t\t\t\twhich: isMac ? 93 : 17,\n\t\t\t} )\n\t\t);\n\n\t\tconst preventableEvent = new KeyboardEvent( 'keydown', {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t\tkey: 'a',\n\t\t\tcode: 'KeyA',\n\t\t\tlocation: window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,\n\t\t\tgetModifierState: ( keyArg ) =>\n\t\t\t\tkeyArg === ( isMac ? 'Meta' : 'Control' ),\n\t\t\tctrlKey: ! isMac,\n\t\t\tmetaKey: isMac,\n\t\t\tcharCode: 0,\n\t\t\tkeyCode: 65,\n\t\t\twhich: 65,\n\t\t} );\n\n\t\tconst wasPrevented =\n\t\t\t! document.activeElement.dispatchEvent( preventableEvent ) ||\n\t\t\tpreventableEvent.defaultPrevented;\n\n\t\tif ( ! wasPrevented ) {\n\t\t\tdocument.execCommand( 'selectall', false, null );\n\t\t}\n\n\t\tdocument.activeElement.dispatchEvent(\n\t\t\tnew KeyboardEvent( 'keyup', {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true,\n\t\t\t\tkey: isMac ? 'Meta' : 'Control',\n\t\t\t\tcode: isMac ? 'MetaLeft' : 'ControlLeft',\n\t\t\t\tlocation: window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,\n\t\t\t\tgetModifierState: () => false,\n\t\t\t\tcharCode: 0,\n\t\t\t\tkeyCode: isMac ? 93 : 17,\n\t\t\t\twhich: isMac ? 93 : 17,\n\t\t\t} )\n\t\t);\n\t} );\n}\n\n/**\n * Sets the clipboard data that can be pasted with\n * `pressKeyWithModifier( 'primary', 'v' )`.\n *\n * @param {Object} $1           Options.\n * @param {string} $1.plainText Plain text to set.\n * @param {string} $1.html      HTML to set.\n */\nexport async function setClipboardData( { plainText = '', html = '' } ) {\n\tawait page.evaluate(\n\t\t( _plainText, _html ) => {\n\t\t\twindow._clipboardData = new DataTransfer();\n\t\t\twindow._clipboardData.setData( 'text/plain', _plainText );\n\t\t\twindow._clipboardData.setData( 'text/html', _html );\n\t\t},\n\t\tplainText,\n\t\thtml\n\t);\n}\n\nasync function emulateClipboard( type ) {\n\tawait page.evaluate( ( _type ) => {\n\t\tif ( _type !== 'paste' ) {\n\t\t\twindow._clipboardData = new DataTransfer();\n\n\t\t\tconst selection = window.getSelection();\n\t\t\tconst plainText = selection.toString();\n\t\t\tlet html = plainText;\n\n\t\t\tif ( selection.rangeCount ) {\n\t\t\t\tconst range = selection.getRangeAt( 0 );\n\t\t\t\tconst fragment = range.cloneContents();\n\n\t\t\t\thtml = Array.from( fragment.childNodes )\n\t\t\t\t\t.map( ( node ) => node.outerHTML || node.nodeValue )\n\t\t\t\t\t.join( '' );\n\t\t\t}\n\n\t\t\twindow._clipboardData.setData( 'text/plain', plainText );\n\t\t\twindow._clipboardData.setData( 'text/html', html );\n\t\t}\n\n\t\tdocument.activeElement.dispatchEvent(\n\t\t\tnew ClipboardEvent( _type, {\n\t\t\t\tbubbles: true,\n\t\t\t\tclipboardData: window._clipboardData,\n\t\t\t} )\n\t\t);\n\t}, type );\n}\n\n/**\n * Performs a key press with modifier (Shift, Control, Meta, Alt), where each modifier\n * is normalized to platform-specific modifier.\n *\n * @param {string} modifier Modifier key.\n * @param {string} key Key to press while modifier held.\n */\nexport async function pressKeyWithModifier( modifier, key ) {\n\tif ( modifier.toLowerCase() === 'primary' && key.toLowerCase() === 'a' ) {\n\t\treturn await emulateSelectAll();\n\t}\n\n\tif ( modifier.toLowerCase() === 'primary' && key.toLowerCase() === 'c' ) {\n\t\treturn await emulateClipboard( 'copy' );\n\t}\n\n\tif ( modifier.toLowerCase() === 'primary' && key.toLowerCase() === 'x' ) {\n\t\treturn await emulateClipboard( 'cut' );\n\t}\n\n\tif ( modifier.toLowerCase() === 'primary' && key.toLowerCase() === 'v' ) {\n\t\treturn await emulateClipboard( 'paste' );\n\t}\n\n\tconst isAppleOS = () => process.platform === 'darwin';\n\tconst overWrittenModifiers = {\n\t\t...modifiers,\n\t\tshiftAlt: ( _isApple ) =>\n\t\t\t_isApple() ? [ SHIFT, ALT ] : [ SHIFT, CTRL ],\n\t};\n\tconst mappedModifiers = overWrittenModifiers[ modifier ]( isAppleOS );\n\tconst ctrlSwap = ( mod ) => ( mod === CTRL ? 'control' : mod );\n\n\tawait Promise.all(\n\t\tmappedModifiers.map( async ( mod ) => {\n\t\t\tconst capitalizedMod = capitalize( ctrlSwap( mod ) );\n\t\t\treturn page.keyboard.down( capitalizedMod );\n\t\t} )\n\t);\n\n\tawait page.keyboard.press( key );\n\n\tawait Promise.all(\n\t\tmappedModifiers.map( async ( mod ) => {\n\t\t\tconst capitalizedMod = capitalize( ctrlSwap( mod ) );\n\t\t\treturn page.keyboard.up( capitalizedMod );\n\t\t} )\n\t);\n}\n"]}