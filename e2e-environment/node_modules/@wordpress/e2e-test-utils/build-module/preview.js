import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";

/**
 * External dependencies
 */
import { last } from 'lodash';
/** @typedef {import('puppeteer').Page} Page */

/**
 * Opens the preview page of an edited post.
 *
 * @param {Page} editorPage puppeteer editor page.
 * @return {Page} preview page.
 */

export function openPreviewPage() {
  return _openPreviewPage.apply(this, arguments);
}

function _openPreviewPage() {
  _openPreviewPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var editorPage,
        openTabs,
        expectedTabsCount,
        previewPage,
        _args = arguments;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            editorPage = _args.length > 0 && _args[0] !== undefined ? _args[0] : page;
            _context.next = 3;
            return browser.pages();

          case 3:
            openTabs = _context.sent;
            expectedTabsCount = openTabs.length + 1;
            _context.next = 7;
            return editorPage.click('.block-editor-post-preview__button-toggle');

          case 7:
            _context.next = 9;
            return editorPage.waitFor('.edit-post-header-preview__button-external');

          case 9:
            _context.next = 11;
            return editorPage.click('.edit-post-header-preview__button-external');

          case 11:
            if (!(openTabs.length < expectedTabsCount)) {
              _context.next = 19;
              break;
            }

            _context.next = 14;
            return editorPage.waitFor(1);

          case 14:
            _context.next = 16;
            return browser.pages();

          case 16:
            openTabs = _context.sent;
            _context.next = 11;
            break;

          case 19:
            previewPage = last(openTabs);
            return _context.abrupt("return", previewPage);

          case 21:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _openPreviewPage.apply(this, arguments);
}
//# sourceMappingURL=preview.js.map