{"version":3,"sources":["@wordpress/e2e-test-utils/src/create-new-post.js"],"names":["addQueryArgs","visitAdminPage","createNewPost","postType","title","content","excerpt","showWelcomeGuide","query","post_type","post_title","slice","page","waitForSelector","evaluate","wp","data","select","isFeatureActive","isWelcomeGuideActive","isFullscreenMode","dispatch","toggleFeature","reload"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;AACA;AACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2EAMH,EANG,EACNC,QADM,QACNA,QADM,EAENC,KAFM,QAENA,KAFM,EAGNC,OAHM,QAGNA,OAHM,EAINC,OAJM,QAINA,OAJM,+BAKNC,gBALM,EAKNA,gBALM,sCAKa,KALb;AAOAC,YAAAA,KAPA,GAOQR,YAAY,CAAE,EAAF,EAAM;AAC/BS,cAAAA,SAAS,EAAEN,QADoB;AAE/BO,cAAAA,UAAU,EAAEN,KAFmB;AAG/BC,cAAAA,OAAO,EAAPA,OAH+B;AAI/BC,cAAAA,OAAO,EAAPA;AAJ+B,aAAN,CAAZ,CAKVK,KALU,CAKH,CALG,CAPR;AAAA;AAAA,mBAcAV,cAAc,CAAE,cAAF,EAAkBO,KAAlB,CAdd;;AAAA;AAAA;AAAA,mBAgBAI,IAAI,CAACC,eAAL,CAAsB,mBAAtB,CAhBA;;AAAA;AAAA;AAAA,mBAkB6BD,IAAI,CAACE,QAAL,CAAe;AAAA,qBACjDC,EAAE,CAACC,IAAH,CAAQC,MAAR,CAAgB,gBAAhB,EAAmCC,eAAnC,CAAoD,cAApD,CADiD;AAAA,aAAf,CAlB7B;;AAAA;AAkBAC,YAAAA,oBAlBA;AAAA;AAAA,mBAqByBP,IAAI,CAACE,QAAL,CAAe;AAAA,qBAC7CC,EAAE,CAACC,IAAH,CAAQC,MAAR,CAAgB,gBAAhB,EAAmCC,eAAnC,CAAoD,gBAApD,CAD6C;AAAA,aAAf,CArBzB;;AAAA;AAqBAE,YAAAA,gBArBA;;AAAA,kBAyBDb,gBAAgB,KAAKY,oBAzBpB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA0BCP,IAAI,CAACE,QAAL,CAAe;AAAA,qBACpBC,EAAE,CAACC,IAAH,CAAQK,QAAR,CAAkB,gBAAlB,EAAqCC,aAArC,CAAoD,cAApD,CADoB;AAAA,aAAf,CA1BD;;AAAA;AAAA;AAAA,mBA8BCV,IAAI,CAACW,MAAL,EA9BD;;AAAA;AAAA;AAAA,mBA+BCX,IAAI,CAACC,eAAL,CAAsB,mBAAtB,CA/BD;;AAAA;AAAA,iBAkCDO,gBAlCC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmCCR,IAAI,CAACE,QAAL,CAAe;AAAA,qBACpBC,EAAE,CAACC,IAAH,CACEK,QADF,CACY,gBADZ,EAEEC,aAFF,CAEiB,gBAFjB,CADoB;AAAA,aAAf,CAnCD;;AAAA;AAAA;AAAA,mBAyCCV,IAAI,CAACC,eAAL,CAAsB,+BAAtB,CAzCD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { visitAdminPage } from './visit-admin-page';\n\n/**\n * Creates new post.\n *\n * @param {Object}  object                    Object to create new post, along with tips enabling option.\n * @param {string}  [object.postType]         Post type of the new post.\n * @param {string}  [object.title]            Title of the new post.\n * @param {string}  [object.content]          Content of the new post.\n * @param {string}  [object.excerpt]          Excerpt of the new post.\n * @param {boolean} [object.showWelcomeGuide] Whether to show the welcome guide.\n */\nexport async function createNewPost( {\n\tpostType,\n\ttitle,\n\tcontent,\n\texcerpt,\n\tshowWelcomeGuide = false,\n} = {} ) {\n\tconst query = addQueryArgs( '', {\n\t\tpost_type: postType,\n\t\tpost_title: title,\n\t\tcontent,\n\t\texcerpt,\n\t} ).slice( 1 );\n\n\tawait visitAdminPage( 'post-new.php', query );\n\n\tawait page.waitForSelector( '.edit-post-layout' );\n\n\tconst isWelcomeGuideActive = await page.evaluate( () =>\n\t\twp.data.select( 'core/edit-post' ).isFeatureActive( 'welcomeGuide' )\n\t);\n\tconst isFullscreenMode = await page.evaluate( () =>\n\t\twp.data.select( 'core/edit-post' ).isFeatureActive( 'fullscreenMode' )\n\t);\n\n\tif ( showWelcomeGuide !== isWelcomeGuideActive ) {\n\t\tawait page.evaluate( () =>\n\t\t\twp.data.dispatch( 'core/edit-post' ).toggleFeature( 'welcomeGuide' )\n\t\t);\n\n\t\tawait page.reload();\n\t\tawait page.waitForSelector( '.edit-post-layout' );\n\t}\n\n\tif ( isFullscreenMode ) {\n\t\tawait page.evaluate( () =>\n\t\t\twp.data\n\t\t\t\t.dispatch( 'core/edit-post' )\n\t\t\t\t.toggleFeature( 'fullscreenMode' )\n\t\t);\n\n\t\tawait page.waitForSelector( 'body:not(.is-fullscreen-mode)' );\n\t}\n}\n"]}