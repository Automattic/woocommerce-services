import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";

/**
 * Internal dependencies
 */
import { visitAdminPage } from './visit-admin-page';
import { switchUserToAdmin } from './switch-user-to-admin';
import { switchUserToTest } from './switch-user-to-test';
/**
 * Visits general settings page and changes the timezone to the given value.
 *
 * @param {string} timezone Value of the timezone to set.
 *
 * @return {string} Value of the previous timezone.
 */

export function changeSiteTimezone(_x) {
  return _changeSiteTimezone.apply(this, arguments);
}

function _changeSiteTimezone() {
  _changeSiteTimezone = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(timezone) {
    var oldTimezone;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return switchUserToAdmin();

          case 2:
            _context.next = 4;
            return visitAdminPage('options-general.php');

          case 4:
            _context.next = 6;
            return page.$eval('#timezone_string', function (element) {
              return element.options[element.selectedIndex].text;
            });

          case 6:
            oldTimezone = _context.sent;
            _context.next = 9;
            return page.select('#timezone_string', timezone);

          case 9:
            _context.next = 11;
            return page.click('#submit');

          case 11:
            _context.next = 13;
            return switchUserToTest();

          case 13:
            return _context.abrupt("return", oldTimezone);

          case 14:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _changeSiteTimezone.apply(this, arguments);
}
//# sourceMappingURL=change-site-timezone.js.map